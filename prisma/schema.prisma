generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Competition {
  id             Int                  @id @default(autoincrement())
  exhibitionName String               @db.VarChar(255)
  date           DateTime
  prizePool      Int
  difficulty     String               @db.VarChar(255)
  location       String
  capacity       Int
  img            String
  ticketPrice    Int                  @default(10)
  dogs           DogsOnCompetitions[]
  tickets        Ticket[]
}

model Dog {
  id           Int                  @id @default(autoincrement())
  name         String               @db.VarChar(255)
  age          Int
  breed        String               @db.VarChar(255)
  img          String
  shotStatus   Boolean
  competitions DogsOnCompetitions[]
  participant  Participant?
}

model DogsOnCompetitions {
  competition   Competition @relation(fields: [competitionId], references: [id])
  competitionId Int
  dog           Dog         @relation(fields: [dogId], references: [id])
  dogId         Int

  @@id([competitionId, dogId])
}

model Ticket {
  id            Int         @id @default(autoincrement())
  firstName     String      @db.VarChar(255)
  lastName      String      @db.VarChar(255)
  email         String      @db.VarChar(255)
  vaccinated    Boolean
  competition   Competition @relation(fields: [competitionId], references: [id])
  competitionId Int
}

model Participant {
  id         Int     @id @default(autoincrement())
  firstName  String  @db.VarChar(255)
  lastName   String  @db.VarChar(255)
  age        Int
  vaccinated Boolean
  dog        Dog     @relation(fields: [dogId], references: [id])
  dogId      Int     @unique
}
